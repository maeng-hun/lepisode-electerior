/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { JobNoitceDto } from '../models/job-noitce-dto';
import { JobNoticeResponseDto } from '../models/job-notice-response-dto';
import { recruitControllerCreate } from '../fn/recruit/recruit-controller-create';
import { RecruitControllerCreate$Params } from '../fn/recruit/recruit-controller-create';
import { recruitControllerFindOne } from '../fn/recruit/recruit-controller-find-one';
import { RecruitControllerFindOne$Params } from '../fn/recruit/recruit-controller-find-one';
import { recruitControllerGetNotices } from '../fn/recruit/recruit-controller-get-notices';
import { RecruitControllerGetNotices$Params } from '../fn/recruit/recruit-controller-get-notices';

@Injectable({ providedIn: 'root' })
export class RecruitService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `recruitControllerGetNotices()` */
  static readonly RecruitControllerGetNoticesPath = '/recruit';

  /**
   * 검색/전체화면.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `recruitControllerGetNotices()` instead.
   *
   * This method doesn't expect any request body.
   */
  recruitControllerGetNotices$Response(params: RecruitControllerGetNotices$Params, context?: HttpContext): Observable<StrictHttpResponse<JobNoticeResponseDto>> {
    return recruitControllerGetNotices(this.http, this.rootUrl, params, context);
  }

  /**
   * 검색/전체화면.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `recruitControllerGetNotices$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  recruitControllerGetNotices(params: RecruitControllerGetNotices$Params, context?: HttpContext): Observable<JobNoticeResponseDto> {
    return this.recruitControllerGetNotices$Response(params, context).pipe(
      map((r: StrictHttpResponse<JobNoticeResponseDto>): JobNoticeResponseDto => r.body)
    );
  }

  /** Path part for operation `recruitControllerFindOne()` */
  static readonly RecruitControllerFindOnePath = '/recruit/{id}';

  /**
   * 상세조회.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `recruitControllerFindOne()` instead.
   *
   * This method doesn't expect any request body.
   */
  recruitControllerFindOne$Response(params: RecruitControllerFindOne$Params, context?: HttpContext): Observable<StrictHttpResponse<JobNoitceDto>> {
    return recruitControllerFindOne(this.http, this.rootUrl, params, context);
  }

  /**
   * 상세조회.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `recruitControllerFindOne$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  recruitControllerFindOne(params: RecruitControllerFindOne$Params, context?: HttpContext): Observable<JobNoitceDto> {
    return this.recruitControllerFindOne$Response(params, context).pipe(
      map((r: StrictHttpResponse<JobNoitceDto>): JobNoitceDto => r.body)
    );
  }

  /** Path part for operation `recruitControllerCreate()` */
  static readonly RecruitControllerCreatePath = '/recruit/create';

  /**
   * 채용 공고 등록.
   *
   *
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `recruitControllerCreate()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  recruitControllerCreate$Response(params: RecruitControllerCreate$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return recruitControllerCreate(this.http, this.rootUrl, params, context);
  }

  /**
   * 채용 공고 등록.
   *
   *
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `recruitControllerCreate$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  recruitControllerCreate(params: RecruitControllerCreate$Params, context?: HttpContext): Observable<void> {
    return this.recruitControllerCreate$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
